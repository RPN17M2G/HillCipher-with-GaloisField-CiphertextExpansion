#pragma once

#include <stdio.h>

#define STATUS_SUCCESS(status) (status == STATUS_CODE_SUCCESS)
#define STATUS_FAILED(status) (status != STATUS_CODE_SUCCESS)

enum STATUS_CODE
{
	STATUS_CODE_UNINITIALIZED = -1,
	STATUS_CODE_SUCCESS = 0,
	STATUS_CODE_INVALID_ARGUMENT,
	STATUS_CODE_ERROR_MEMORY_ALLOCATION,
	STATUS_CODE_MATRIX_NOT_INVERTIBLE,
	STATUS_CODE_ERROR_SODIUM_INITIALIZATION,
	STATUS_CODE_ERROR_COPY_FAILED,
	STATUS_CODE_COULDNT_ADD_RANDOM_BITS,
	STATUS_CODE_COULDNT_DIVIDE_TO_BLOCKS,
	STATUS_CODE_COULDNT_MULTIPLY_MATRIX_WITH_PLAINTEXT,
	STATUS_CODE_COULDNT_MULTIPLY_MATRIX_WITH_CIPHERTEXT,
	STATUS_CODE_COULDNT_PAD_VECTOR,
	STATUS_CODE_COULDNT_REMOVE_PADDING, 
	STATUS_CODE_COULDNT_REMOVE_RANDOM_BITS,
	STATUS_CODE_NO_PADDING,
	STATUS_CODE_INVALID_RESULT_WIDTH,
	STATUS_CODE_COULDNT_CREATE_OUTPUT_FILE,
	STATUS_CODE_INPUT_FILE_DOESNT_EXISTS_OR_NOT_READBLE,
	STATUS_CODE_PARSE_ARGUMENTS_FAILED,
	STATUS_CODE_COULDNT_WRITE_FILE,
	STATUS_CODE_COULDNT_FILE_OPEN,
	STATUS_CODE_ERROR_INVALID_FILE_SIZE,
	STATUS_CODE_COULDNT_READ_FILE,
	STATUS_CODE_FILE_NOT_BINARY
	
} typedef STATUS_CODE;

