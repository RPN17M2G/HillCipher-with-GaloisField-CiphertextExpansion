name: Linux Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-debug:
    uses: ./.github/workflows/linux-build-template.yml
    with:
      config: Debug
      artifact-name: build-debug

  build-release:
    uses: ./.github/workflows/linux-build-template.yml
    with:
      config: Release
      artifact-name: build-release

  test-linux-debug:
    needs: build-debug
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-debug
          path: ./GaloisFieldHillCipher/build
      - run: chmod +x ./GaloisFieldHillCipher/build/UnitTests
      - run: ./GaloisFieldHillCipher/build/UnitTests
  
  test-linux-release:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-release
          path: ./GaloisFieldHillCipher/build
      - run: chmod +x ./GaloisFieldHillCipher/build/UnitTests
      - run: ./GaloisFieldHillCipher/build/UnitTests
  
  valgrind-memory-test-release:
    needs: build-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - { name: ek, args: "-m ek -o $(pwd)/GaloisFieldHillCipher/Examples/Samples/encryption_key.bin -d 3" }
          - { name: dk, args: "-m dk -k $(pwd)/GaloisFieldHillCipher/Examples/Samples/encryption_key.bin -o $(pwd)/GaloisFieldHillCipher/Examples/Samples/decryption_key.bin -d 3" }
          - { name: e,  args: "-m e -i $(pwd)/GaloisFieldHillCipher/Examples/Samples/example_plaintext.txt -o $(pwd)/GaloisFieldHillCipher/Examples/Samples/encrypted.bin -k $(pwd)/GaloisFieldHillCipher/Examples/Samples/encryption_key.bin -d 3" }
          - { name: d,  args: "-m d -i $(pwd)/GaloisFieldHillCipher/Examples/Samples/encrypted.bin -o $(pwd)/decrypted.txt -k $(pwd)/GaloisFieldHillCipher/Examples/Samples/decryption_key.bin -d 3" }
          - { name: ge, args: "-m ge -i $(pwd)/GaloisFieldHillCipher/Examples/Samples/example_plaintext.txt -o $(pwd)/ge_encrypted.bin -k $(pwd)/GaloisFieldHillCipher/Examples/Samples/encryption_key.bin -d 3" }
          - { name: gd, args: "-m gd -i $(pwd)/GaloisFieldHillCipher/Examples/Samples/encrypted.bin -o $(pwd)/gd_decrypted.txt -k $(pwd)/GaloisFieldHillCipher/Examples/Samples/encryption_key.bin -d 3" }
    steps:
      - run: sudo apt-get update && sudo apt-get install -y valgrind
      - uses: actions/download-artifact@v4
        with:
          name: build-release
          path: $(pwd)/GaloisFieldHillCipher/build
      - run: chmod +x $(pwd)/GaloisFieldHillCipher/build/GaloisFieldHillCipher

      - name: Valgrind - Run mode ${{ matrix.test.name }}
        run: |
          sudo valgrind --leak-check=full -v -s \
            --log-file=valgrind-${{ matrix.test.name }}.txt \
            $(pwd)/GaloisFieldHillCipher/build/GaloisFieldHillCipher ${{ matrix.test.args }}

      - name: Check leaks - ${{ matrix.test.name }}
        run: |
          grep "definitely lost:" valgrind-${{ matrix.test.name }}.txt | grep -vq " 0 bytes" \
            && (echo "Leaks found!" && exit 1) || echo "No leaks"
      - name: Print Valgrind log on failure - ${{ matrix.test.name }}
        if: failure()
        run: cat valgrind-${{ matrix.test.name }}.txt
